diff --git a/ui/gtk-egl.c b/ui/gtk-egl.c
index e84431790c..15b3d64233 100644
--- a/ui/gtk-egl.c
+++ b/ui/gtk-egl.c
@@ -66,13 +66,14 @@ void gd_egl_draw(VirtualConsole *vc)
 #ifdef CONFIG_GBM
     QemuDmaBuf *dmabuf = vc->gfx.guest_fb.dmabuf;
 #endif
-    int ww, wh;
+    int ww, wh, ws;
 
     if (!vc->gfx.gls) {
         return;
     }
 
     window = gtk_widget_get_window(vc->gfx.drawing_area);
+    ws = gdk_window_get_scale_factor(gtk_widget_get_window(vc->gfx.drawing_area));
     ww = gdk_window_get_width(window);
     wh = gdk_window_get_height(window);
 
@@ -109,13 +110,22 @@ void gd_egl_draw(VirtualConsole *vc)
         eglMakeCurrent(qemu_egl_display, vc->gfx.esurface,
                        vc->gfx.esurface, vc->gfx.ectx);
 
-        surface_gl_setup_viewport(vc->gfx.gls, vc->gfx.ds, ww, wh);
+        surface_gl_setup_viewport(vc->gfx.gls, vc->gfx.ds, ww * ws, wh * ws);
         surface_gl_render_texture(vc->gfx.gls, vc->gfx.ds);
 
         eglSwapBuffers(qemu_egl_display, vc->gfx.esurface);
 
-        vc->gfx.scale_x = (double)ww / surface_width(vc->gfx.ds);
-        vc->gfx.scale_y = (double)wh / surface_height(vc->gfx.ds);
+        if (vc->s->full_screen) {
+            vc->gfx.scale_x = (double)ww / surface_width(vc->gfx.ds);
+            vc->gfx.scale_y = (double)wh / surface_height(vc->gfx.ds);
+        } else if (vc->s->free_scale) {
+            double sx, sy;
+
+            sx = (double)ww / surface_width(vc->gfx.ds);
+            sy = (double)wh / surface_height(vc->gfx.ds);
+
+            vc->gfx.scale_x = vc->gfx.scale_y = MIN(sx, sy);
+        }
 
         glFlush();
     }
diff --git a/ui/gtk.c b/ui/gtk.c
index fd82e9b1ca..6526572afb 100644
--- a/ui/gtk.c
+++ b/ui/gtk.c
@@ -872,7 +872,7 @@ static gboolean gd_motion_event(GtkWidget *widget, GdkEventMotion *motion,
     int x, y;
     int mx, my;
     int fbh, fbw;
-    int ww, wh, ws;
+    int ww, wh;
 
     if (!vc->gfx.ds) {
         return TRUE;
@@ -884,7 +884,6 @@ static gboolean gd_motion_event(GtkWidget *widget, GdkEventMotion *motion,
     window = gtk_widget_get_window(vc->gfx.drawing_area);
     ww = gdk_window_get_width(window);
     wh = gdk_window_get_height(window);
-    ws = gdk_window_get_scale_factor(window);
 
     mx = my = 0;
     if (ww > fbw) {
@@ -894,8 +893,8 @@ static gboolean gd_motion_event(GtkWidget *widget, GdkEventMotion *motion,
         my = (wh - fbh) / 2;
     }
 
-    x = (motion->x - mx) / vc->gfx.scale_x * ws;
-    y = (motion->y - my) / vc->gfx.scale_y * ws;
+    x = (motion->x - mx) / vc->gfx.scale_x;
+    y = (motion->y - my) / vc->gfx.scale_y;
 
     if (qemu_input_is_absolute()) {
         if (x < 0 || y < 0 ||
@@ -1405,6 +1404,14 @@ static void gd_accel_show_menubar(void *opaque)
     gtk_menu_item_activate(GTK_MENU_ITEM(s->show_menubar_item));
 }
 
+static void gd_reset_scale(VirtualConsole *vc)
+{
+    GdkWindow *window = gtk_widget_get_window(vc->gfx.drawing_area);
+    int ws = gdk_window_get_scale_factor(window);
+    vc->gfx.scale_x = 1.0 / ws;
+    vc->gfx.scale_y = 1.0 / ws;
+}
+
 static void gd_menu_full_screen(GtkMenuItem *item, void *opaque)
 {
     GtkDisplayState *s = opaque;
@@ -1427,8 +1434,7 @@ static void gd_menu_full_screen(GtkMenuItem *item, void *opaque)
         }
         s->full_screen = FALSE;
         if (vc->type == GD_VC_GFX) {
-            vc->gfx.scale_x = 1.0;
-            vc->gfx.scale_y = 1.0;
+            gd_reset_scale(vc);
             gd_update_windowsize(vc);
         }
     }
@@ -1484,9 +1490,7 @@ static void gd_menu_zoom_fixed(GtkMenuItem *item, void *opaque)
     GtkDisplayState *s = opaque;
     VirtualConsole *vc = gd_vc_find_current(s);
 
-    vc->gfx.scale_x = 1.0;
-    vc->gfx.scale_y = 1.0;
-
+    gd_reset_scale(vc);
     gd_update_windowsize(vc);
 }
 
@@ -1499,8 +1503,7 @@ static void gd_menu_zoom_fit(GtkMenuItem *item, void *opaque)
         s->free_scale = TRUE;
     } else {
         s->free_scale = FALSE;
-        vc->gfx.scale_x = 1.0;
-        vc->gfx.scale_y = 1.0;
+        gd_reset_scale(vc);
     }
 
     gd_update_windowsize(vc);
@@ -2089,8 +2092,6 @@ static GSList *gd_vc_gfx_init(GtkDisplayState *s, VirtualConsole *vc,
 
     vc->label = qemu_console_get_label(con);
     vc->s = s;
-    vc->gfx.scale_x = 1.0;
-    vc->gfx.scale_y = 1.0;
 
 #if defined(CONFIG_OPENGL)
     if (display_opengl) {
@@ -2385,6 +2386,7 @@ static void gtk_display_init(DisplayState *ds, DisplayOptions *opts)
     }
 
     vc = gd_vc_find_current(s);
+    gd_reset_scale(vc);
     gtk_widget_set_sensitive(s->view_menu, vc != NULL);
 #ifdef CONFIG_VTE
     gtk_widget_set_sensitive(s->copy_item,
